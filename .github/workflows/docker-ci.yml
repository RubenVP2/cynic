name: Docker CI - Build and Test

# Déclenche ce workflow à chaque push sur la branche main
# ou à chaque Pull Request qui cible la branche main.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test_docker:
    runs-on: ubuntu-latest
    steps:
      # Étape 1: Récupérer le code du repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 2: Construire l'image Docker
      - name: Build Docker Image
        run: docker build -t cynic-ci-test .

      # Étape 3: Lancer le conteneur en utilisant notre secret "dummy"
      - name: Run Docker Container
        run: |
          docker run \
            -d \
            -p 8000:8000 \
            --name cynic-test-container \
            -e MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY_DUMMY }} \
            cynic-ci-test

      # Étape 4: Tester si le conteneur est fonctionnel
      - name: Test Running Container
        run: |
          echo "Waiting for the server to start..."
          sleep 15
          echo "Pinging the web server..."
          curl -f http://localhost:8000
          echo "Server is up and running!"

      # Étape 5 (Bonus): Afficher les logs du conteneur
      - name: Check Container Logs
        if: always()
        run: docker logs cynic-test-container